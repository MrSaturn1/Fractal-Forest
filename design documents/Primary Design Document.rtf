{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Primary Design Document\
\
For my term project I decided to combine the graphics unit of 112 with the recursion unit to create a simple game in tkinter. I used recursion to create a forest made of fractals, randomly generated each time the game is opened, as well as other objects such as snowflakes and a sierpinsky triangle. As usual, the basic framework of the game consists of a run function, a redraw function, a timerFired function, and a keyPressed function. These in turn call different versions of themselves based on the season, section of the game (forest vs. splash screen), etc. They also call the functions that generate trees, birds, snowflakes, etc. and modify the values required to generate these objects. As far as the user interface goes, I tried to keep it visually simple, as tkinter is very limited and I needed to be able to have the program run at a non-glacial pace.}